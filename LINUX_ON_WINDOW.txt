* about linux *
* how to using linux in windows ?
* what is windows subsystem for linux?
* what is ubuntu?
* what is the different between wsl1 and wsl2?

* To using linux in winsdow, we have to turn on WSL (windows subsystem for linux) that is supported by microsoft,
  it is like a vmware to run other operating system in windows.
* wsl 1 is developed for using linux, convert directly command of linux to windows, it is not a vmware for running seperated linux.
* wsl 2 base is hyper-v (a vmware), a technology is developed by microsoft to running linux and windows at sametime,
  that feature supports you can install docker in linux, this is impossible with wsl 1.
* ubuntu is an distribution of linux developed by an organization (update later)

* WSL command:
	* wsl --list --all: list all distributions in wsl.
	* wsl --list --verbose: List installed Linux distributions.

* Using linux in windows:
	* Step 01: your windows version have to be satisfied with microsoft specification (win 11 or win 10 with some condition),
			   If not, you have to update your windows.
	* Step 02: Turn on Windows Subsystem for linux. (search google to turn on).
	* Step 03: 
		* If using WSL 1, you can download distribution of linux on microsoft store (recommended).
	      Running and set username and password for your linux distribution.
		* If using WSL 2, you have to download file msi to update your WSL version, and set your WSL defaul when install linux distribution.
		  You can visit instruction in microsoft website.
	* Step 04: ALL Done, you can using linux distribution in your windows operation in any terminal with command: wsl
			   You can see your linux version with command : uname -a

* Work with linux:
	* sudo apt update: download all new version of packages to prepare for upgrade.
	* sudo apt upgrade: begin upgrade all packages that have to be download.
	* cat /etc/apt/source.list.d : see all new version of packages have been downloaded and willing to upgrade.

	* wsl -> open ubuntu.
	* wsl -l -v -> list all linux distribution in wsl.
	* wsl -list -verbose -> list all linux distribution in wsl.
	* wsl -- unregister distro_name -> remove linux distribution from wsl.
	* wsl.exe --set-version (distro name) 2 -> To upgrade the Linux distro to v2.
	* wsl.exe --set-default-version 2 -> To set v2 as the default version for future installations.
	* wsl --set-default <distro name> -> Change your default WSL distro. Because The Docker-WSL integration is enabled on the default WSL distribution.
	
	* clear -> clear all linux terminal.
	* ls -> list all in current directory.
	* ls -l -> list detail in current directory.
	* ls -a -> list all and also hidden file in current directory.
	* ls -la -> list detail also hidden filein current directory.
	* ls -R -> list all file aslo subfile of file (be careful when using this command).
	* cd <direct_name> -> goto directory.
	* cd .. -> goback one directly.
	* cd ../.. -> goback two directly.
	* cd - -> goback to previous directly.
	* cd / -> goto root directly.
	* cd -> goto /home/account.
	
	* mkdir <folder_name> -> create new folder in current directory.
	* mkdir -p <folder_name>/<folder_name> -> create new folder in unExist folder.
	* rm <folder_name> -> delete folder.
	* rm -r <folder_name> -> delete folder and all subfolders of it.
	
	* touch <file_name> -> create file.
	
	* vim -> see information of Vim.
	* vi <file_name> -> create and open file if not exist, or only open file if exist.
	* :q -> exit mode.
	* i -> insert mode.
	* esc (button) -> nomal mode.
	* :q! -> force exit when not saving file.
	* :w -> save mode.
	* :wq -> save and exit mode.
	* :x -> save and exit mode.
	
	* > -> override.
	* >> -> append to end.
	
	* cat <fn> -> show content on terminal.
	* cat <fn> <fn> -> show content step-by-step.
	* cat <fn> <fn> > concat.html -> concatnate two file to a new file.
	
	* echo "<conten>" -> show content on terminal.
	* echo "<content>" > echo.html -> save content into a new file.
	
	* tail <fn> -> take last ten lines in file and show on terminal.
	* tail -n 5 <fn> -> take last five lines in file and show on terminal.
	* tail -f <fn> -> show last ten lines and follow file.
	* control + c -> quit follow file.
	
	* cat <fn> | grep <condition> -> show lines have condition.
	* cat <fn> <fn> | grep <condition> -> show live have condition in two file step-by-step.
	
	* note: filename or foldername base is a path in current directory.
	
	* cp <fn> <new fn> -> copy file to new file in current directory.
	* cp <fn> <new folder path> -> copy file to new folder with same filename.
	* cp <fn> <new filename path> -> copy file to new folder with specific filename.
	* cp -r <folder path> <new folder path> -> copy folder to new folder.
	
	* note: there are many folders in linux are difficult to access, because it is protected, you have to have root permission
			to access these folders as /Home/... folder.
			To access these folders, you can use "sudo" (super user do) command to access, and password of linux.
	
	* mv <fn> <new fn> -> move file to new file in current directory (change name of file)
	* mv <fn path> <new fn path> move file to new folder. if no specify filename, it have the same filename.
	
	* rm <fn> -> remove file in current directory.
	* rm <fn> <fn> - remove many files in current directory.
	* rmdir <foldername> -> can only remove empty folder.
	* rm -r <foldername> -> can remove unempty folder.
	
	
	* sudo <command> -> excute command under root permission, super user do.
	
	* note: about permission in linux.
		* Three type of users in linux.
			* Owner - the user who creates and owners file or folder.
			* Group — all users who are members of the same group.
			* Others — all other users on the system who are neither the owner nor members of a group.
		* list down all in detail mode, you will see this.
			* drwxr-xr-x   3 root root    4096 Sep 14 22:59 home
			*-rwxr-xr-x   3 root root 1440152 Sep 12 23:49 init
			* lrwxrwxrwx   1 root root       7 May  2 04:34 lib -> usr/lib
			
				* d -> folder
				* - -> file
				* l -> shortcut, sibling, contains link to a file or folder.
				
				* root (at first) - is name of owner.
				* root (at second) - is name of group.
				* and any user not in two abow is others.
				
				* rwx -> after first character is permission of owner.
				* next three characters -> is permission of group.
				* next there characters -> is permission of others.
				
				* r -> read.
				* w -> write.
				* x -> excute.
		* change permission.
			* using charactor.
				* if you want to chage permission for that file or folder, you have to be the owner of that file or folder.
				* sudo chmod u=rwx,g=rx,o=rx <filename>
				* sudo chmod g+w,o-x <filename>
			* using octal numbers (0 -> 7)
				* 4 -> read.
				* 2 -> write.
				* 1 -> excute.
				* 0 -> no permission.
				* 7 -> full (4+2+10
				* 6 -> read and write (4+2)
				* 5 -> read and excute (4+1)
				* sudo chmod 777 <fn> -> 7(1) -> u, 7(2) -> g, 7(3) -> o.
				* sudo chmod 754 <fn> -> u=rwx g=rx o=r.
		* change owner.
			* if you want to chage owner for that file or folder, you have to be root.
			* sudo chown <new owner name> <fn> -> new owner have to be existed in system.
			* sudo chown root <fn> -> change owner to root.
			* sudo chown vvt:vvt <fn> -> change owner to vvt and chage group to vvt.
	
	* man tail -> show description of tail.
	* man wget -> show description of wget.
	
	* wget <link> -> download file into current directory.
	
	* apt -> command is used to manage packages in system.
	
	* sudo apt install nodejs -> install node js.
	* sudo apt install nodejs -y -> install auto without asking.
	* if you acounter error Unable to locate package nodejs, update your system.
	
	* run: node index.js -> see on terminal.
	
	* ps aux -> see running processes.
	
	* kill -> end a process.
	* kill -15 <processId> -> Terminatea process with time to save data.
	* kill -9 <processId> -> Terminate process immediately without time to save data.
	
	* passwd -> change password.
	
	* top -> see detail process.
	* htop -> see art detail process.
	* df -> see disk.
	* df -h -> see art detail disk.
	* free -> see ram and swap.
	
	* control + a -> go to begin line.
	* control + e -> go to end line.
	
	* sudo apt remove <package_name>
	* sudo apt autoremove -> remove relevant packages.
	
	* adduser <name> -> add user and set password for user (need sudo)
	* su - <name> -> switch user.
	* exit -> logout, switch to previous user.
	
	* passwd -> change password current user
	* passwd <username> -> change password specific user
	
* Access to Server *
	* By SSH
		* ssh -i <private key file> ubuntu@.... -> connect to server ubuntu.
		* When you connect to server, it will compare you private key and puclic key, if success, go into server.
	* Login by root
		* go to ec2, change root passwor
		* connect ec2 with root account
		* sudo passwd root
		* go to /etc/ssh/sshd_config
		* vi /etc/ssh/sshd_config
		* set permitrootlogin yes
		* set passwordauthentication yes
		* save and reboot server.
		* login: ssh root@<IP>.
		
	* Nếu mà không authen được bằng password, thì reboot lại máy ảo, đối với vm của azure thì vào reset password.
	* add new user and set to sudo group or set sudo privilage.
		* adduser <newuser> // flow vm.
		* usermod -aG sudo <newuser> // flow vm
		* // if cannot using two command, login with root or use sudo.
		* groups <newuser> // check groups of user.
		
		* // set sudo privilage in file
		* visudo // open config.
		* add this command after command 'root ALL=(ALL:ALL) ALL' '<newuser> ALL=(ALL:ALL) ALL';
		* save and now you can use normarl user with sudo privilage.
	
		
	
	* Using Cloudflare for your domain.
		* you need to change name server of your domain to cloudflare.
		* Open free ssl (now stl) for your domain by set DNS using https.
		* Now when you ping to your domain, it have to go through cloudflare server, you will not see your IP server,
		  Ip you see will be IP of cloudflare server. It make our server prevent from DOS or DDOS.
		  If attacker know your public IP server, them can send such large mount of fake requests to your server,
			it makes your server can not tackle, auth user can not request to your server.
	
	* Note:
		* http: no encypt payload when send request, go into 80 gate.
		* https: encypt payload when send request, go into 443 gate.
		* ssh: go into 22 gate.

* What is Nginx ?
	* A web server, a imtermidiate server listen to request depends on it's config.
	* And change request into server to analyst.
	
* How to deploy reactjs on Nginx?
	* create your project at /var/www/<project_name>/html.
	* run: npm run build -> a build folder will be created in your react project.
	* push all file in build folder at reactjs.
	
	* note: keep control to folder and file you created to ensure yo can action with your account.
	
	* goto /etc/nginx/sites-enabled/
	* create a file with same name your project and set new server below:
		server {
        listen 80;
        listen [::]:80;

        root /var/www/bookstorefe/html;
        index index.html index.htm index.nginx-debian.html;

        server_name bookstore.io.vn;

        location / {
                try_files $uri $uri/ /index.html =404;
        }
		
		location /api {
                pass url: localhost:8080 (update later)
        }
	}
	* and that's all, test your project

* How to deploy springboot application with mySQL in EC2 AWS with RDS and S3?
	* What is RDS?
		* RDS is database hosting of aws, we can regist a database hosting anh connect to it to use for our application.
		* One more the same like RDS is SQL of google cloud.
	* What is S3?
		* S3 is a bucket of aws, it is like a ssd disk to store data like nosql(image, file...), not a relational datadase.
		* We also can use Bucket of google cloud.
		

* Runlevel
	* init 3: giao diện dòng lệnh
	* init 5: giao diện đồ họa: init 5
	* init 0: shutdown
	* init 6: reboot
	* init 1: only one user use for fix files system
		
	





	